{
  "swagger": "2.0",
  "info": {
    "title": "Sales-manager API",
    "description": "Document for Sales-manager API",
    "version": "0.0.1"
  },
  "produces": ["application/json"],
  "host": "localhost:3000",
  "basePath": "/docs",
  "paths": {
    "/product": {
      "get": {
        "summary": "Get product info",
        "description":"Get product info by id",
        "x-swagger-router-controller": "Product",
        "tags": ["Product"],
        "operationId": "productGet",
        "parameters": [
          {
            "name" : "_id",
            "in" : "query",
            "description" : "The id of product",
            "required" : true,
            "type" : "string"
          }
        ],
        "responses": {
          "200": {
            "description" : "Found A product",
            "schema" : {
              "$ref" : "#/definitions/Product"
            }
          },
          "204": {
            "description" : "Did not find a product"
          },
          "default": {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "summary": "Update product info",
        "description":"Update product info",
        "x-swagger-router-controller": "Product",
        "tags": ["Product"],
        "operationId": "productPut",
        "parameters": [
          {
            "name" : "product object",
            "in" : "query",
            "description" : "A product object json",
            "required" : true,
            "type" : "string"
          }
        ],
        "responses": {
          "200": {
            "description" : "Update a product",
            "schema" : {
              "$ref" : "#/definitions/Product"
            }
          },
          "default": {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a product",
        "description":"Delete a product",
        "x-swagger-router-controller": "Product",
        "tags": ["Product"],
        "operationId": "productDelete",
        "parameters": [
          {
            "name" : "_id",
            "in" : "query",
            "description" : "The id of product",
            "required" : true,
            "type" : "string"
          }
        ],
        "responses": {
          "200": {
            "description" : "Delete a product successful"
          },
          "default": {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/products": {
      "get": {
        "summary": "Get products by category's _id",
        "description":"Returns all products in category",
        "x-swagger-router-controller": "Products",
        "tags": ["Products"],
        "operationId": "productsGet",
        "parameters": [
          {
            "name" : "_id",
            "in" : "query",
            "description" : "The id of category",
            "required" : true,
            "type" : "string"
          }
        ],
        "responses": {
          "200": {
            "description" : "An array of products",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Product"
              }
            }
          },
          "default": {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/history": {
      "get": {
        "summary": "User Activity",
        "description":"The User Activity endpoint returns data about a user&#39;s lifetime activity with Uber. The response will include pickup locations and times, dropoff locations and times, the distance of past requests, and information about which products were requested.&lt;br&gt;&lt;br&gt;The history array in the response will have a maximum length based on the limit parameter. The response value count may exceed limit, therefore subsequent API requests may be necessary.",
        "x-swagger-router-controller": "User",
        "tags": ["History"],
        "operationId": "historyGet",
        "parameters": [
          {
            "name" : "offset",
            "in" : "query",
            "description" : "Offset the list of returned results by this amount. Default is zero.",
            "required" : false,
            "type" : "integer",
            "format" : "int32"
          },
          {
            "name" : "limit",
            "in" : "query",
            "description" : "Number of items to retrieve. Default is 5, maximum is 100.",
            "required" : false,
            "type" : "integer",
            "format" : "int32"
          }
        ],
        "responses": {
          "200": {
            "description" : "History information for the given user",
            "schema" : {
              "$ref" : "#/definitions/Activities"
            }
          },
          "default": {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/user": {
      "get": {
        "summary": "User's Profile",
        "description":"The User Profile endpoint returns information about the Uber user that has authorized with the application.",
        "x-swagger-router-controller": "User",
        "tags": ["User"],
        "operationId": "load",
        "parameters": [
          {
            "name" : "_id",
            "in" : "query",
            "description" : "The id of the user",
            "required" : true,
            "type" : "string"
          }
        ],
        "responses": {
          "200": {
            "description" : "Profile information for a user",
            "schema" : {
              "$ref" : "#/definitions/Profile"
            }
          },
          "default": {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/estimates/price": {
      "get": {
        "summary": "Price Estimates",
        "description":"The Price Estimates endpoint returns an estimated price range\nfor each product offered at a given location. The price estimate is\nprovided as a formatted string with the full price range and the localized\ncurrency symbol.&lt;br&gt;&lt;br&gt;The response also includes low and high estimates,\nand the [ISO 4217](http://en.wikipedia.org/wiki/ISO_4217) currency code for\nsituations requiring currency conversion. When surge is active for a particular\nproduct, its surge_multiplier will be greater than 1, but the price estimate\nalready factors in this multiplier.\n",
        "x-swagger-router-controller": "Estimates",
        "tags": ["Estimates"],
        "operationId": "estimatesPriceGet",
        "parameters": [
          {
            "name" : "start_latitude",
            "in" : "query",
            "description" : "Latitude component of start location.",
            "required" : true,
            "type" : "number",
            "format" : "double"
          },
          {
            "name" : "start_longitude",
            "in" : "query",
            "description" : "Longitude component of start location.",
            "required" : true,
            "type" : "number",
            "format" : "double"
          },
          {
            "name" : "end_latitude",
            "in" : "query",
            "description" : "Latitude component of end location.",
            "required" : true,
            "type" : "number",
            "format" : "double"
          },
          {
            "name" : "end_longitude",
            "in" : "query",
            "description" : "Longitude component of end location.",
            "required" : true,
            "type" : "number",
            "format" : "double"
          }
        ],
        "responses": {
          "200": {
            "description" : "An array of price estimates by product",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/PriceEstimate"
              }
            }
          },
          "default": {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/estimates/time": {
      "get": {
        "summary": "Time Estimates",
        "description":"The Time Estimates endpoint returns ETAs for all products offered at a given location, with the responses expressed as integers in seconds. We recommend that this endpoint be called every minute to provide the most accurate, up-to-date ETAs.",
        "x-swagger-router-controller": "Estimates",
        "tags": ["Estimates"],
        "operationId": "estimatesTimeGet",
        "parameters": [
          {
            "name" : "start_latitude",
            "in" : "query",
            "description" : "Latitude component of start location.",
            "required" : true,
            "type" : "number",
            "format" : "double"
          },
          {
            "name" : "start_longitude",
            "in" : "query",
            "description" : "Longitude component of start location.",
            "required" : true,
            "type" : "number",
            "format" : "double"
          },
          {
            "name" : "customer_uuid",
            "in" : "query",
            "description" : "Unique customer identifier to be used for experience customization.",
            "required" : false,
            "type" : "string",
            "format" : "uuid"
          },
          {
            "name" : "product_id",
            "in" : "query",
            "description" : "Unique identifier representing a specific product for a given latitude & longitude.",
            "required" : false,
            "type" : "string"
          }
        ],
        "responses": {
          "200": {
            "description" : "An array of products",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Product"
              }
            }
          },
          "default": {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Product": {
      "properties" : {
        "_id" : {
          "type" : "string",
          "description" : "Unique identifier representing a specific product for a given UUID."
        },
        "_rev" : {
          "type" : "string",
          "description" : "Revision of Product document."
        },
        "description" : {
          "type" : "string",
          "description" : "Description of product."
        },
        "name" : {
          "type" : "string",
          "description" : "Display name of product."
        },
        "price" : {
          "type" : "integer",
          "format" : "double",
          "description" : "Price of Product."
        },
        "stock": {
          "type": "integer",
          "format" : "int32",
          "description" : "Products remain in stock"
        },
        "image" : {
          "type" : "string",
          "description" : "Image URL representing the product."
        }
      }
    },
    "PriceEstimate": {
      "properties" : {
        "product_id" : {
          "type" : "string",
          "description" : "Unique identifier representing a specific product for a given latitude & longitude. For example, uberX in San Francisco will have a different product_id than uberX in Los Angeles"
        },
        "currency_code" : {
          "type" : "string",
          "description" : "[ISO 4217](http://en.wikipedia.org/wiki/ISO_4217) currency code."
        },
        "display_name" : {
          "type" : "string",
          "description" : "Display name of product."
        },
        "estimate" : {
          "type" : "string",
          "description" : "Formatted string of estimate in local currency of the start location. Estimate could be a range, a single number (flat rate) or \"Metered\" for TAXI."
        },
        "low_estimate" : {
          "type" : "number",
          "description" : "Lower bound of the estimated price."
        },
        "high_estimate" : {
          "type" : "number",
          "description" : "Upper bound of the estimated price."
        },
        "surge_multiplier" : {
          "type" : "number",
          "description" : "Expected surge multiplier. Surge is active if surge_multiplier is greater than 1. Price estimate already factors in the surge multiplier."
        }
      }
    },
    "Profile": {
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "Name of the Uber user."
        },
        "email" : {
          "type" : "string",
          "description" : "Email address of the Uber user"
        },
        "username" : {
          "type" : "string",
          "description" : "Name of the Uber user."
        },
        "provider" : {
          "type" : "string",
          "description" : "Provider of the Uber user."
        },
        "hashed_password" : {
          "type" : "string",
          "description" : "hashed_password code of the Uber user."
        },
        "salt" : {
          "type" : "string",
          "description" : "salt code of the Uber user."
        },
        "authToken" : {
          "type" : "string",
          "description" : "authToken code of the Uber user."
        }
      }
    },
    "Activity": {
      "properties" : {
        "uuid" : {
          "type" : "string",
          "description" : "Unique identifier for the activity"
        }
      }
    },
    "Activities": {
      "properties" : {
        "offset" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Position in pagination."
        },
        "limit" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Number of items to retrieve (100 max)."
        },
        "count" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Total number of items available."
        },
        "history" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Activity"
          }
        }
      }
    },
    "Error": {
      "properties" : {
        "code" : {
          "type" : "integer",
          "format" : "int32"
        },
        "message" : {
          "type" : "string"
        },
        "fields" : {
          "type" : "string"
        }
      }
    }
  }
}
